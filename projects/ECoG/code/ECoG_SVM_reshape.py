# -*- coding: utf-8 -*-
"""SVM_reshape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18wnuH9NaWusjRpw33mmGluEwtwiWpkXz
"""

#get dftime
data = {'t_on': dat1['t_on'], 't_off': dat1['t_off'], 'stim_id': dat1['stim_id']}
dftime = pd.DataFrame(data)

#get dft
a = dat1['V']
epoch_id=[]
for i in range(46):
  epoch_id.append(i+1)
epoch_id_array = np.array(epoch_id)
df = pd.DataFrame(a, columns=epoch_id)
dft = df.T

#generate X for SVM
#select row
chan_1 = dft.loc[1]
#slice dataframe into 119 arrays

dt_chan_1 = chan_1[dftime["t_on"][1]: dftime["t_off"][1]+1]
ar_chan_1=dt_chan_1.values
# print(ar_chan_1.shape)

#automate the process
def slice_chan_dat(dft,dftime,channel_i):
  chan_i = dft.loc[channel_i]
  chan_array = []
  for j in range (0, len(dftime)):
    chan_array.append(chan_i[dftime["t_on"][j]: dftime["t_off"][j]])
  # print(chan_array.shape)
  # ar_chan_i = chan_array.values
  y = np.array([np.array(xi) for xi in chan_array])
  return y

all_array = []
slice_chan_dat(dft,dftime,1)

#generate y for SVM
y = dftime["stim_id"].values
print(y.shape)